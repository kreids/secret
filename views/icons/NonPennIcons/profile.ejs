<!DOCTYPE html>
<html>
<head>
	
	<title>User Profile</title>
	<link rel="stylesheet" href="http://getbootstrap.com/dist/css/bootstrap.css">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js">
	</script>
	<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

	<script>
	var names = []; // stores suggestions for autocomplete in search bar
	var posts = {}; // client side list of wall posts
	$(document).ready(function() {  
		$.post('/getWall', 
		{
			email: <%- JSON.stringify(profileEmail) %>
		},
		function(data, status) {
			if (data) {			
				setTimeout(refresh, 5000);
				var h2 = document.createElement('H2');
				h2.innerHTML = data.profileInfo.name;
				$(h2).addClass('line-up');
				var h5 = document.createElement('H5');
				console.log(data.profileInfo);
				h5.innerHTML = 'Affiliation: ' + data.profileInfo.affiliation + '<br>' + 'Birthday: ' + new Date(data.profileInfo.birthday.substring(0, 10)).toString().substring(4,15);
				$(h5).addClass('right').addClass('line-up').addClass('pad-top').addClass('gray');

				$('#headerDiv').append(h2); // name of user profile
				if (data.profileInfo.affiliation && data.profileInfo.birthday) {
					$('#headerDiv').append(h5);
				}
				if (data.profileInfo.affiliation) {
					$('#headerDiv').append(h5); // affiliation for user profile
				}
				data.postList.forEach(function(post) {
					var key = post.key;
					posts[key] = post;
					appendPost(post, false);
				});
				data.friendList.forEach(function(friend) {
					appendFriend(friend);
				});
				createPostBox(data.profileInfo.name);
				loadAutocomplete();
				$("#searchBar").keyup(getFriendSuggestions);
				makeAddRmvFriendBtn(data.friendsEmails, data.profileInfo.email, data.loggedInUser);
			}
			else {
				alert('Error retrieving profile');
			}
		});
});

// make an add friend button if the logged in user isn't friends with the user whose profile is being loaded
// else makes a remove friend button
var makeAddRmvFriendBtn = function(friendsEmails, profileEmail, loggedInEmail) {
	if (profileEmail != loggedInEmail) {
		var areFriends = (friendsEmails[profileEmail] != null);
		var btn = document.createElement('input');
		$(btn).addClass('btn').addClass('right');
		if (areFriends) {
			$(btn).val('Remove Friend');
			$(btn).addClass('btn-danger').addClass('grow');
			$(btn).click(function() {
				$.post('/deleteFriendship', {
					friend1: profileEmail,
					friend2: loggedInEmail
				},
				function(data, status) {
					if (data != null && data != '') {
						alert('Could not remove friend');
					}
					else {
						alert('Successfully removed friend');
						$(btn).removeClass('btn-danger');
						$(btn).hide();
						friendsEmails[profileEmail] = null;
						$.post('/removeFriendFromList',
						{
							friend: profileEmail
						},
						function(data, status) {

						});
						makeAddRmvFriendBtn(friendsEmails, profileEmail, loggedInEmail); // reinitialize the submit handler
					}
				});
			});
		}
		else {
			$(btn).addClass('btn-success').addClass('grow');
			$(btn).val('Add Friend');
			$(btn).click(function() {
				$.post('/createFriendship', {
					email1: loggedInEmail,
					email2: profileEmail
				}, function(data, status) {
					if (data != null && data != '') {
						console.log(data);
						alert('Could not add friend');
					}
					else {
						alert('Successfully added friend!');
						friendsEmails[profileEmail] = profileEmail;
						$(btn).hide();
						makeAddRmvFriendBtn(friendsEmails, profileEmail, loggedInEmail); // reinitialize the submit handler
					}
				});
			});	
		}
		$("#addFriendBtnContainer").append(btn);
	}
};

	// Creates the new post/status update box (checks if profile is for the currently logged in user)
	var createPostBox = function(name) {
		var profileEmail = <%- JSON.stringify(profileEmail) %>;
		var userEmail = <%- JSON.stringify(userEmail) %>;
		if (profileEmail == userEmail) {
			$("#addPostBtn").val('Update Status');
			$("#addPostBox").attr('placeholder', "What's on your mind?");
		}
		else {
			$("#addPostBtn").val('Post');
			$("#addPostBox").attr('placeholder', "Write something on " + name + "'s wall");
		}
	};

	// Handler for the new posts/status updates
	var submitHandler = function() {
		var fromEmail = <%- JSON.stringify(userEmail) %>;
		var toEmail = <%- JSON.stringify(profileEmail) %>;
		var messageContent = document.getElementById('addPostBox').value;
		document.getElementById('addPostBox').value = '';
		$.post('/addPost', 
		{
			fromEmail: fromEmail,
			toEmail: toEmail,
			messageContent: messageContent
		},
		function(data, status) {
			refresh();
		});
		
	};

	// Renders each post on page load (if newPost, prepend instead of append)
	var appendPost = function(post, newPost) {
		console.log(post);
		var container = document.createElement('div');
		$(container).addClass('row').addClass('post');

		var h5 = document.createElement('h5');
		if (post.fromName == post.toName) {
			h5.innerHTML = post.fromName;
		}
		else if (post.content == "friendship") {
			h5.innerHTML = post.fromName +  '<span class="glyphicon glyphicon-menu-left"></span>' +
			'<span class="glyphicon glyphicon-menu-right"></span>' +  post.toName;
		}
		else  {
			h5.innerHTML = post.fromName +  '<span class="glyphicon glyphicon-menu-right"></span>' +  post.toName;
		}
		$(h5).addClass('row');
		$(container).append(h5);

		var date = document.createElement('div');
		var stringDate = new Date(post.createdAt).toString();
		$(date).addClass('right').addClass('row');
		date.innerHTML = stringDate.substring(0, stringDate.length - 15);
		$(container).append(date);

		var content = document.createElement('div');
		if (post.content == 'friendship') {
			content.innerHTML = post.fromName + ' became friends with ' + post.toName;
		}
		else {
			content.innerHTML = post.content;
		}
		$(content).addClass('row');
		$(container).append(content);

		var commentContainer = makeCommentBox(post);
		$(container).append(commentContainer);		
		var dividerDiv = document.createElement('DIV');
		var divider = document.createElement('SPAN');
		$(dividerDiv).addClass('col-sm-10')
		$(dividerDiv).append(divider);
		$(divider).addClass('divider');
		$(container).append(dividerDiv);
		if (newPost) {
			$("#postContainer").prepend(container);
		}
		else {
			$("#postContainer").append(container);
		}
	};

	// renders the comment box for each post
	var makeCommentBox = function(post) {
		var commentContainer = document.createElement('div');
		$(commentContainer).addClass('row').addClass('col-sm-offset-1');

		for(var index in post.comments) { 
			var comment = post.comments[index];
			prependComment(comment, commentContainer);
		}

		var commentBox = document.createElement('input');
		$(commentBox).attr('type', 'text').attr('placeholder', 'add comment').attr('name', 'comment');
		$(commentBox).attr('style', 'height: 30px');
		$(commentBox).addClass('line-up');

		var commentSubmit = document.createElement('input');
		$(commentSubmit).attr('type', 'submit');
		$(commentSubmit).addClass('right').addClass('line-up').addClass('col-sm-2').addClass('col-sm-offset-9').addClass('btn btn-info grow');

		$(commentContainer).append(commentBox);
		$(commentContainer).append(commentSubmit);
		$(commentContainer).attr('id', post.key + 'commentContainer');

		$(commentSubmit).click(function() {
			if ($(commentBox).val() && $(commentBox).val() != '') {
				$.post('/addComment',
				{
					postKey: post.key,
					commentorEmail: <%- JSON.stringify(userEmail) %>,
					comment: $(commentBox).val()
				}, function(error, status) {
					if (!error || error == '') {
						alert('comment added successfully');
						$(commentBox).val('');
					}
					else {
						alert('error adding comment');
					}
				});
			}
		});

		return commentContainer;
	};

	// renders a comment
	var prependComment = function(comment, commentContainer) {
		var commentDiv = document.createElement('div');
		var contentDiv = document.createElement('div');
		
		contentDiv.innerHTML = comment.content + '  - ' + comment.commentorName;
		
		$(commentDiv).append(contentDiv);
		$(commentContainer).prepend(commentDiv);
	};

	// Renders each friend on page load
	var appendFriend = function(friend) {
		var container = document.createElement('div');
		$(container).addClass('friend');
		var form = document.createElement('form');
		$(form).attr('action', '/profile');
		var name = document.createElement('input');
		var lastLogin = friend.lastLogin;
		if (lastLogin) {
			var lastDate = new Date(lastLogin);
			var now = new Date(Date.now());
			
			var difference = Math.abs((lastDate.getTime() - now.getTime()) / 1000);
			if (difference < 10) { // this friend is logged in
				$(name).addClass('btn').addClass('btn-success');
			}
			else { // this friend is not logged in
				$(name).addClass('btn').addClass('btn-primary');
			}
		}
		else { // this friend has never logged in (test users)
			$(name).addClass('btn').addClass('btn-primary');
		}
		$(name).attr('id', friend.email);
		$(name).val(friend.name);
		name.type = 'submit';
		var hiddenField = document.createElement('input');
		hiddenField.type = 'hidden';
		$(hiddenField).attr('name', 'email');
		$(hiddenField).attr('value', friend.email);
		$(form).append(hiddenField);
		$(form).append(name);
		$(container).append(form);
		$("#friendContainer").append(container);
	};

	// Retrieves list of autocomplete suggestions from server
	var getFriendSuggestions = function() {
		$.get('/getFriendSuggestions', 
		{
			text: $("#searchBar").val()
		},
		function(data, status) {
			if (data) {
				$('#searchBar').autocomplete({
					source: data,
					noResults:'',
					onSelect: function (suggestion) {
						alert('You selected: ' + suggestion.value + ', ' + suggestion.data);
					}
				});
			}
		});
	};
	// initializes autocomplete for search bar
	var loadAutocomplete = function() {

		$('#searchBar').autocomplete({
			source: names,
			noResults:'',
			onSelect: function (suggestion) {
				alert('You selected: ' + suggestion.value + ', ' + suggestion.data);
			}
		});
	};
	// refreshes the page
	var refresh = function() {
		$.post('/getWall', 
		{
			email: <%- JSON.stringify(profileEmail) %>
		},
		function(data, status) {
			if (data) {
				data.postList.forEach(function(post) {
					var key = post.key;
					var oldPost = posts[key];
					if (!oldPost) { // this post is new and needs to be rendered
						appendPost(post, true);
						posts[key] = post;
					}
					else {
						var commentKeys = Object.keys(post.comments);
						commentKeys.forEach(function(commentKey) {
							var oldComment = oldPost.comments[commentKey];
							if (!oldComment) { // this comment is new and needs to be rendered
								var commentContainer = document.getElementById(String(oldPost.key) + 'commentContainer');
								prependComment(post.comments[commentKey], commentContainer);
								oldPost.comments[commentKey] = post.comments[commentKey];
							}
						});
					}
				});
				data.friendList.forEach(function(item) {
					var lastDate = new Date(item.lastLogin);
					var now = new Date(Date.now());

					var difference = Math.abs((lastDate.getTime() - now.getTime()) / 1000);
					var friend = document.getElementById(item.email);
					if (difference < 10) { // friend is currently logged in
						console.log('CHANGED');
						$(friend).removeClass('btn-primary');
						$(friend).addClass('btn').addClass('btn-success');
					}
					else { // friend is logged out
						$(friend).removeClass('btn-success');
						$(friend).addClass('btn').addClass('btn-primary');
					}
				});
			}
			else {
				var error = document.createElement('label');
				error.setAttribute(color, 'red');
				$(document.body).append(error);
			}
		});
setTimeout(refresh, 5000);
};

// validate search bar submission
var validate = function(form) {
	var text = form.search.value;
	if (text != '')
		return true;
	return false;
};

</script>

<style type="text/css">

.gray {
	color: gray;
}
.pad-top {
	padding-top: 30px;
}

body {
	padding-top: 40px;
	padding-bottom: 40px;
	background-color: white;

}
.about{
	position: relative;
	overflow: hidden;
}
.info {
	position:absolute;
	top:10%;
	background:rgba(100, 130, 161, 0.90);
	width:100%;
	height:100%;
	padding:1%;
	display: none;
	text-align:center;
	color:#fff
}
.btn {
	width: 120px;
	height: 35px;
}
.green {
	color: #16b616;
}

input {
	width: 100%;
	height: 35px;
}
h3{
	text-align: center;
	font-size: 200%;
}
h4{
	font-size: 180%;
}

.right {
	float: right;
}
.left {
	float: left;
}
.grow {
	transition: all .2s ease-in-out; 
}
.grow:hover {
	-webkit-transform: scale(1.05);
	-moz-transform:    scale(1.05);
	-o-transform:      scale(1.05);
	-ms-transform:     scale(1.05);
}
.post {
	padding-bottom: 10px;
}
.divider {
    display:block;
    border:none;
    color:white;
    height:1px;
    background:black;
    background: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 350, from(#000), to(#fff));
}
.line-up {
	display: inline-block;
}
.ui-helper-hidden-accessible {display:none; }
</style>


</head>
<body>
	<nav class="navbar navbar-default">
		<div class="container-fluid">
			<div class="navbar-header">
				<a class="navbar-brand" href="/feed">Pennbook</a>
			</div>

			<div class="collapse navbar-collapse">
				<form class="navbar-form navbar-right" role="search" action='/search' method='POST' onsubmit='return validate(this)'>
					<div class="form-group">
						<input type="text" class="form-control" name='search' placeholder="Search" id='searchBar'>
						<input type='submit' class='form-control' style='height:33px'>
					</div>
					

				</form>

			</div>
		</div>
	</nav>
	<div class='row'>
		<div class='col-sm-5 col-sm-offset-1 page-header' id='headerDiv'>

		</div>
		<div class='col-sm-4 col-sm-offset-7' id='addFriendBtnContainer'>

		</div>

	</div>
	<div class='row'>
		<div class='col-sm-5 col-sm-offset-1'>
			<form id='statusForm' role='form' class='form-horizontal' onsubmit="return updateStatus(this)">
				<textarea id='addPostBox' name="status" style="width:450px;height:120px;" class='col-sm-8 grow' required class='form-control'></textarea>
				<input id='addPostBtn' class='btn btn-info grow right' type='button' onclick='submitHandler()'/>
			</form>
		</div>
		<div class='col-sm-4 col-sm-offset-7'>
			<a href='/feed' class='btn btn-warning grow right'>Newsfeed</a>
			<div id='friendContainer'>

			</div>
		</div>
	</div>
	<div class='row'>
		<div class='col-sm-5 col-sm-offset-1' id='postContainer'>

		</div>
	</div>
	<div class='row'>
		<div class='col-sm-4 col-sm-offset-7'>
			<a href='/logout' class='btn btn-danger grow right'>Logout</a>
		</div>
	</div>
</body>
</html>
